# The MIT License (MIT).
#
# Copyright (c) 2023-2024 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.

name: Check pull request

on:
  push:
    tags: "*"

jobs:
  tests:
    strategy:
      matrix:
        python_version: ["3.9", "3.12"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ matrix.python_version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Run tests via pytest
        run: poetry run pytest

  publish-pypi:
    # needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --tags --force && \
          latest=$(git tag --sort=creatordate | tail -1) && \
          sed -i '/^version = "/s/"[^"]*"/"'"$latest"'"/' pyproject.toml
      - uses: peter-evans/create-pull-request@v5
        with:
          branch: version-up
          commit-message: 'new version in pyproject.toml'
          delete-branch: true
          title: 'Up version in pyproject.toml'
          assignees: blablatdinov
          base: master
      - run: cat pyproject.toml
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.12
        with:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
